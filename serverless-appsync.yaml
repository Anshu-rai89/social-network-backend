name: social-network-backend
schema: schema.api.graphql
authenticationType: AMAZON_COGNITO_USER_POOLS
userPoolConfig:
  awsRegion: 'us-east-2'
  defaultAction: ALLOW
  userPoolId: !Ref UserPool
mappingTemplatesLocation: mapping-templates
mappingTemplates: 
  - type: Query
    field: getMyProfile
    dataSource: usersTable
  
  - type: Query
    field: getImageUploadUrl
    dataSource: getImageUploadUrlFunction
    request: false
    response: false
  
  - type: Query
    field: getTweets
    dataSource: tweetsTable

  - type: Query
    field: getMyTimeline
    dataSource: timelinesTable

  - type: Query
    field: getLikes
    dataSource: likesTable
  
  - type: Query
    field: getProfile
    dataSource: usersTable
  
  - type: Mutation
    field: editMyProfile
    dataSource: usersTable
  
  - type: Mutation
    field: tweet
    dataSource: tweetFunction
    request: false
    response: false

  - type: Mutation
    field: retweet
    dataSource: reTweetFunction
    request: false
    response: false

  - type: Mutation
    field: unretweet
    dataSource: unReTweetFunction
    request: false
    response: false

  - type: Mutation
    field: like
    dataSource: likesTimeline
  
  - type: Mutation
    field: unlike
    dataSource: unLikesTable
  
  - type: Mutation
    field: reply
    dataSource: replyFunction
    request: false
    response: false
  
  - type: Mutation
    field: follow
    dataSource: relationshipsMutationTable
  
  #nested fields
  - type: Tweet
    field: profile
    dataSource: usersTable
  - type: Tweet
    field: liked
    dataSource: likesTable
  - type: UnHydratedTweetsPage
    field: tweets
    dataSource: tweetsTable
  - type: MyProfile
    field: tweets
    dataSource: tweetsTable
  - type: OtherProfile
    field: tweets
    dataSource: tweetsTable

  - type: Retweet
    field: profile
    dataSource: usersTable
    request: Tweet.profile.request.vtl
    response: Tweet.profile.response.vtl

  - type: Reply
    field: profile
    dataSource: usersTable
    request: Tweet.profile.request.vtl
    response: Tweet.profile.response.vtl

  - type: Retweet
    field: retweetOf
    dataSource: tweetsTable
  
  - type: Reply
    field: inReplyToTweet
    dataSource: tweetsTable

  - type: Reply
    field: inReplyToUsers
    dataSource: usersTable

  - type: OtherProfile
    field: following
    dataSource: relationshipsTable
  
  - type: OtherProfile
    field: followedBy
    dataSource: relationshipsTable
  


dataSources:
  - type: NONE
    name: none
  - type: AMAZON_DYNAMODB
    name: usersTable
    config: 
      tableName: !Ref UsersTable
  - type: AMAZON_DYNAMODB
    name: tweetsTable
    config:
      tableName: !Ref TweetsTable
  - type: AMAZON_DYNAMODB
    name: timelinesTable
    config:
      tableName: !Ref TimelineTable
  
  - type: AMAZON_DYNAMODB
    name: likesTimeline
    config:
      tableName: !Ref LikesTable
      iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:UpdateItem
        Resource:
          - !GetAtt UsersTable.Arn
          - !GetAtt TweetsTable.Arn
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: !GetAtt LikesTable.Arn

  - type: AMAZON_DYNAMODB
    name: likesTable
    config:
      tableName: !Ref LikesTable
  
  - type: AMAZON_DYNAMODB
    name: unLikesTable
    config:
      tableName: !Ref LikesTable
      iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:UpdateItem
        Resource:
          - !GetAtt UsersTable.Arn
          - !GetAtt TweetsTable.Arn
      - Effect: Allow
        Action: dynamodb:DeleteItem
        Resource: !GetAtt LikesTable.Arn
      
  - type: AMAZON_DYNAMODB
    name: relationshipsMutationTable
    config:
      tableName: !Ref RelationshipsTable
      iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:UpdateItem
        Resource: !GetAtt UsersTable.Arn
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: !GetAtt RelationshipsTable.Arn
  
  - type: AMAZON_DYNAMODB
    name: relationshipsTable
    config:
      tableName: !Ref RelationshipsTable

  - type: AWS_LAMBDA
    name: getImageUploadUrlFunction
    config:
      functionName: getImageUploadUrlFunction
  - type: AWS_LAMBDA
    name: tweetFunction
    config:
      functionName: tweet
  
  - type: AWS_LAMBDA
    name: reTweetFunction
    config:
      functionName: reTweet
  - type: AWS_LAMBDA
    name: unReTweetFunction
    config:
      functionName: unReTweet
  - type: AWS_LAMBDA
    name: replyFunction
    config:
      functionName: reply

substitutions:
  TweetsTable: !Ref TweetsTable
  LikesTable: !Ref LikesTable
  UsersTable: !Ref UsersTable
  RelationshipsTable: !Ref RelationshipsTable